/*
 * Content Services client
 * Manage content items through multiple repositories.
 *
 * The version of the OpenAPI document: 3.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.content.services.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;


/**
 * Retention Policy type.
 */
@ApiModel(description = "Retention Policy type.")
@JsonPropertyOrder({
  RetentionPolicy.JSON_PROPERTY_ID,
  RetentionPolicy.JSON_PROPERTY_NAME,
  RetentionPolicy.JSON_PROPERTY_PATTERN,
  RetentionPolicy.JSON_PROPERTY_DESCRIPTION,
  RetentionPolicy.JSON_PROPERTY_TIME_TO_LIVE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class RetentionPolicy {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_PATTERN = "pattern";
  private String pattern;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_TIME_TO_LIVE = "timeToLive";
  private String timeToLive;

  public RetentionPolicy() { 
  }

  public RetentionPolicy id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Retention policy unique Identifier
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Retention policy unique Identifier")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public RetentionPolicy name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Retention policy unique name
   * @return name
  **/
  @javax.annotation.Nonnull
  @NotNull
  @ApiModelProperty(required = true, value = "Retention policy unique name")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public RetentionPolicy pattern(String pattern) {
    this.pattern = pattern;
    return this;
  }

   /**
   * Ant Pattern of files to match
   * @return pattern
  **/
  @javax.annotation.Nonnull
  @NotNull
  @ApiModelProperty(required = true, value = "Ant Pattern of files to match")
  @JsonProperty(JSON_PROPERTY_PATTERN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPattern() {
    return pattern;
  }


  @JsonProperty(JSON_PROPERTY_PATTERN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPattern(String pattern) {
    this.pattern = pattern;
  }


  public RetentionPolicy description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Retention policy description.
   * @return description
  **/
  @javax.annotation.Nonnull
  @NotNull
  @ApiModelProperty(required = true, value = "Retention policy description.")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }


  public RetentionPolicy timeToLive(String timeToLive) {
    this.timeToLive = timeToLive;
    return this;
  }

   /**
   * Specifies the time to live of the files that match the specified pattern in the repository expressed in the following format: 2y 7m 15d/14m/1y 50d/etc. The duration value cannot be less than 1 day
   * @return timeToLive
  **/
  @javax.annotation.Nonnull
  @NotNull
  @ApiModelProperty(required = true, value = "Specifies the time to live of the files that match the specified pattern in the repository expressed in the following format: 2y 7m 15d/14m/1y 50d/etc. The duration value cannot be less than 1 day")
  @JsonProperty(JSON_PROPERTY_TIME_TO_LIVE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTimeToLive() {
    return timeToLive;
  }


  @JsonProperty(JSON_PROPERTY_TIME_TO_LIVE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTimeToLive(String timeToLive) {
    this.timeToLive = timeToLive;
  }


  /**
   * Return true if this retention-policy object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RetentionPolicy retentionPolicy = (RetentionPolicy) o;
    return Objects.equals(this.id, retentionPolicy.id) &&
        Objects.equals(this.name, retentionPolicy.name) &&
        Objects.equals(this.pattern, retentionPolicy.pattern) &&
        Objects.equals(this.description, retentionPolicy.description) &&
        Objects.equals(this.timeToLive, retentionPolicy.timeToLive);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, pattern, description, timeToLive);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RetentionPolicy {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    pattern: ").append(toIndentedString(pattern)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    timeToLive: ").append(toIndentedString(timeToLive)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

