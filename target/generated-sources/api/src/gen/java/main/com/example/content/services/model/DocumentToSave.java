/*
 * Content Services client
 * Manage content items through multiple repositories.
 *
 * The version of the OpenAPI document: 3.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.content.services.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;


/**
 * CMIS Document to create or update
 */
@ApiModel(description = "CMIS Document to create or update")
@JsonPropertyOrder({
  DocumentToSave.JSON_PROPERTY_ID,
  DocumentToSave.JSON_PROPERTY_PATH,
  DocumentToSave.JSON_PROPERTY_REPOSITORY_ID,
  DocumentToSave.JSON_PROPERTY_TYPE,
  DocumentToSave.JSON_PROPERTY_CONTENT,
  DocumentToSave.JSON_PROPERTY_MIME_TYPE,
  DocumentToSave.JSON_PROPERTY_LENGTH,
  DocumentToSave.JSON_PROPERTY_PROPERTIES,
  DocumentToSave.JSON_PROPERTY_CREATE_SIGNED_URL
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DocumentToSave {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_PATH = "path";
  private String path;

  public static final String JSON_PROPERTY_REPOSITORY_ID = "repositoryId";
  private String repositoryId;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type = "bb:structuredcontent";

  public static final String JSON_PROPERTY_CONTENT = "content";
  private String content;

  public static final String JSON_PROPERTY_MIME_TYPE = "mimeType";
  private String mimeType = "application/json; charset=utf-8";

  public static final String JSON_PROPERTY_LENGTH = "length";
  private Long length;

  public static final String JSON_PROPERTY_PROPERTIES = "properties";
  private Map<String, Object> properties = null;

  public static final String JSON_PROPERTY_CREATE_SIGNED_URL = "createSignedUrl";
  private Boolean createSignedUrl = false;

  public DocumentToSave() { 
  }

  public DocumentToSave id(String id) {
    this.id = id;
    return this;
  }

   /**
   * ID of the existing document to update.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ID of the existing document to update.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public DocumentToSave path(String path) {
    this.path = path;
    return this;
  }

   /**
   * Path of the document to create or update. Folders in the path will be created automatically if needed.
   * @return path
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Path of the document to create or update. Folders in the path will be created automatically if needed.")
  @JsonProperty(JSON_PROPERTY_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPath() {
    return path;
  }


  @JsonProperty(JSON_PROPERTY_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPath(String path) {
    this.path = path;
  }


  public DocumentToSave repositoryId(String repositoryId) {
    this.repositoryId = repositoryId;
    return this;
  }

   /**
   * Repository ID to which updating or creating document belongs.
   * @return repositoryId
  **/
  @javax.annotation.Nonnull
  @NotNull
  @ApiModelProperty(required = true, value = "Repository ID to which updating or creating document belongs.")
  @JsonProperty(JSON_PROPERTY_REPOSITORY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRepositoryId() {
    return repositoryId;
  }


  @JsonProperty(JSON_PROPERTY_REPOSITORY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRepositoryId(String repositoryId) {
    this.repositoryId = repositoryId;
  }


  public DocumentToSave type(String type) {
    this.type = type;
    return this;
  }

   /**
   * The cmis type of the document
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The cmis type of the document")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public DocumentToSave content(String content) {
    this.content = content;
    return this;
  }

   /**
   * Content of the document to create or update
   * @return content
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Content of the document to create or update")
  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContent() {
    return content;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContent(String content) {
    this.content = content;
  }


  public DocumentToSave mimeType(String mimeType) {
    this.mimeType = mimeType;
    return this;
  }

   /**
   * Content mime type
   * @return mimeType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Content mime type")
  @JsonProperty(JSON_PROPERTY_MIME_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMimeType() {
    return mimeType;
  }


  @JsonProperty(JSON_PROPERTY_MIME_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMimeType(String mimeType) {
    this.mimeType = mimeType;
  }


  public DocumentToSave length(Long length) {
    this.length = length;
    return this;
  }

   /**
   * Content length
   * @return length
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Content length")
  @JsonProperty(JSON_PROPERTY_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getLength() {
    return length;
  }


  @JsonProperty(JSON_PROPERTY_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLength(Long length) {
    this.length = length;
  }


  public DocumentToSave properties(Map<String, Object> properties) {
    this.properties = properties;
    return this;
  }

  public DocumentToSave putPropertiesItem(String key, Object propertiesItem) {
    if (this.properties == null) {
      this.properties = new HashMap<>();
    }
    this.properties.put(key, propertiesItem);
    return this;
  }

   /**
   * Optional content item properties
   * @return properties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Optional content item properties")
  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getProperties() {
    return properties;
  }


  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProperties(Map<String, Object> properties) {
    this.properties = properties;
  }


  public DocumentToSave createSignedUrl(Boolean createSignedUrl) {
    this.createSignedUrl = createSignedUrl;
    return this;
  }

   /**
   * If storage type supports generation of signed url for given content, setting this to true will generate a signed url for a limited time.
   * @return createSignedUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If storage type supports generation of signed url for given content, setting this to true will generate a signed url for a limited time.")
  @JsonProperty(JSON_PROPERTY_CREATE_SIGNED_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCreateSignedUrl() {
    return createSignedUrl;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_SIGNED_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateSignedUrl(Boolean createSignedUrl) {
    this.createSignedUrl = createSignedUrl;
  }


  /**
   * Return true if this document-to-save object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentToSave documentToSave = (DocumentToSave) o;
    return Objects.equals(this.id, documentToSave.id) &&
        Objects.equals(this.path, documentToSave.path) &&
        Objects.equals(this.repositoryId, documentToSave.repositoryId) &&
        Objects.equals(this.type, documentToSave.type) &&
        Objects.equals(this.content, documentToSave.content) &&
        Objects.equals(this.mimeType, documentToSave.mimeType) &&
        Objects.equals(this.length, documentToSave.length) &&
        Objects.equals(this.properties, documentToSave.properties) &&
        Objects.equals(this.createSignedUrl, documentToSave.createSignedUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, path, repositoryId, type, content, mimeType, length, properties, createSignedUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentToSave {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    repositoryId: ").append(toIndentedString(repositoryId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    mimeType: ").append(toIndentedString(mimeType)).append("\n");
    sb.append("    length: ").append(toIndentedString(length)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    createSignedUrl: ").append(toIndentedString(createSignedUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

