/*
 * Content Services client
 * Manage content items through multiple repositories.
 *
 * The version of the OpenAPI document: 3.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.content.services.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.example.content.services.model.RelationshipTarget;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.LinkedHashSet;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;


/**
 * Maps relationship source with targets
 */
@ApiModel(description = "Maps relationship source with targets")
@JsonPropertyOrder({
  ContentRelationships.JSON_PROPERTY_SOURCE_ID,
  ContentRelationships.JSON_PROPERTY_REFERENCED_CONTENT_IDS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ContentRelationships {
  public static final String JSON_PROPERTY_SOURCE_ID = "sourceId";
  private String sourceId;

  public static final String JSON_PROPERTY_REFERENCED_CONTENT_IDS = "referencedContentIds";
  private Set<RelationshipTarget> referencedContentIds = new LinkedHashSet<>();

  public ContentRelationships() { 
  }

  public ContentRelationships sourceId(String sourceId) {
    this.sourceId = sourceId;
    return this;
  }

   /**
   * Identifier of the source object
   * @return sourceId
  **/
  @javax.annotation.Nonnull
  @NotNull
  @ApiModelProperty(required = true, value = "Identifier of the source object")
  @JsonProperty(JSON_PROPERTY_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSourceId() {
    return sourceId;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSourceId(String sourceId) {
    this.sourceId = sourceId;
  }


  public ContentRelationships referencedContentIds(Set<RelationshipTarget> referencedContentIds) {
    this.referencedContentIds = referencedContentIds;
    return this;
  }

  public ContentRelationships addReferencedContentIdsItem(RelationshipTarget referencedContentIdsItem) {
    this.referencedContentIds.add(referencedContentIdsItem);
    return this;
  }

   /**
   * List of content relationships for these object
   * @return referencedContentIds
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "List of content relationships for these object")
  @JsonProperty(JSON_PROPERTY_REFERENCED_CONTENT_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Set<RelationshipTarget> getReferencedContentIds() {
    return referencedContentIds;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_REFERENCED_CONTENT_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReferencedContentIds(Set<RelationshipTarget> referencedContentIds) {
    this.referencedContentIds = referencedContentIds;
  }


  /**
   * Return true if this content-relationships object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContentRelationships contentRelationships = (ContentRelationships) o;
    return Objects.equals(this.sourceId, contentRelationships.sourceId) &&
        Objects.equals(this.referencedContentIds, contentRelationships.referencedContentIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sourceId, referencedContentIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContentRelationships {\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("    referencedContentIds: ").append(toIndentedString(referencedContentIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

