/*
 * Content Services client
 * Manage content items through multiple repositories.
 *
 * The version of the OpenAPI document: 3.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.content.services.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.example.content.services.model.DocumentSignedUrlResponse;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;


/**
 * Duplicated document response.
 */
@ApiModel(description = "Duplicated document response.")
@JsonPropertyOrder({
  DuplicatedItem.JSON_PROPERTY_SOURCE_CONTENT_ID,
  DuplicatedItem.JSON_PROPERTY_DUPLICATED_CONTENT_ID,
  DuplicatedItem.JSON_PROPERTY_TARGET_PATH,
  DuplicatedItem.JSON_PROPERTY_DUPLICATED_STATUS,
  DuplicatedItem.JSON_PROPERTY_SIGNED_URL
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DuplicatedItem {
  public static final String JSON_PROPERTY_SOURCE_CONTENT_ID = "sourceContentId";
  private String sourceContentId;

  public static final String JSON_PROPERTY_DUPLICATED_CONTENT_ID = "duplicatedContentId";
  private String duplicatedContentId;

  public static final String JSON_PROPERTY_TARGET_PATH = "targetPath";
  private String targetPath;

  public static final String JSON_PROPERTY_DUPLICATED_STATUS = "duplicatedStatus";
  private Boolean duplicatedStatus;

  public static final String JSON_PROPERTY_SIGNED_URL = "signedUrl";
  private DocumentSignedUrlResponse signedUrl;

  public DuplicatedItem() { 
  }

  public DuplicatedItem sourceContentId(String sourceContentId) {
    this.sourceContentId = sourceContentId;
    return this;
  }

   /**
   * The id of the original document which was duplicated.
   * @return sourceContentId
  **/
  @javax.annotation.Nonnull
  @NotNull
  @ApiModelProperty(required = true, value = "The id of the original document which was duplicated.")
  @JsonProperty(JSON_PROPERTY_SOURCE_CONTENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSourceContentId() {
    return sourceContentId;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_CONTENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSourceContentId(String sourceContentId) {
    this.sourceContentId = sourceContentId;
  }


  public DuplicatedItem duplicatedContentId(String duplicatedContentId) {
    this.duplicatedContentId = duplicatedContentId;
    return this;
  }

   /**
   * The id of the duplicated document. If duplicatedStatus is false, it equals to sourceContentId
   * @return duplicatedContentId
  **/
  @javax.annotation.Nonnull
  @NotNull
  @ApiModelProperty(required = true, value = "The id of the duplicated document. If duplicatedStatus is false, it equals to sourceContentId")
  @JsonProperty(JSON_PROPERTY_DUPLICATED_CONTENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDuplicatedContentId() {
    return duplicatedContentId;
  }


  @JsonProperty(JSON_PROPERTY_DUPLICATED_CONTENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDuplicatedContentId(String duplicatedContentId) {
    this.duplicatedContentId = duplicatedContentId;
  }


  public DuplicatedItem targetPath(String targetPath) {
    this.targetPath = targetPath;
    return this;
  }

   /**
   * The path of the duplicated document. If duplicatedStatus is false, it is empty.
   * @return targetPath
  **/
  @javax.annotation.Nonnull
  @NotNull
  @ApiModelProperty(required = true, value = "The path of the duplicated document. If duplicatedStatus is false, it is empty.")
  @JsonProperty(JSON_PROPERTY_TARGET_PATH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTargetPath() {
    return targetPath;
  }


  @JsonProperty(JSON_PROPERTY_TARGET_PATH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTargetPath(String targetPath) {
    this.targetPath = targetPath;
  }


  public DuplicatedItem duplicatedStatus(Boolean duplicatedStatus) {
    this.duplicatedStatus = duplicatedStatus;
    return this;
  }

   /**
   * Whether the document was duplicated or not. False only if source document is not in rootFolder
   * @return duplicatedStatus
  **/
  @javax.annotation.Nonnull
  @NotNull
  @ApiModelProperty(required = true, value = "Whether the document was duplicated or not. False only if source document is not in rootFolder")
  @JsonProperty(JSON_PROPERTY_DUPLICATED_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getDuplicatedStatus() {
    return duplicatedStatus;
  }


  @JsonProperty(JSON_PROPERTY_DUPLICATED_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDuplicatedStatus(Boolean duplicatedStatus) {
    this.duplicatedStatus = duplicatedStatus;
  }


  public DuplicatedItem signedUrl(DocumentSignedUrlResponse signedUrl) {
    this.signedUrl = signedUrl;
    return this;
  }

   /**
   * Get signedUrl
   * @return signedUrl
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SIGNED_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DocumentSignedUrlResponse getSignedUrl() {
    return signedUrl;
  }


  @JsonProperty(JSON_PROPERTY_SIGNED_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSignedUrl(DocumentSignedUrlResponse signedUrl) {
    this.signedUrl = signedUrl;
  }


  /**
   * Return true if this duplicated-item object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DuplicatedItem duplicatedItem = (DuplicatedItem) o;
    return Objects.equals(this.sourceContentId, duplicatedItem.sourceContentId) &&
        Objects.equals(this.duplicatedContentId, duplicatedItem.duplicatedContentId) &&
        Objects.equals(this.targetPath, duplicatedItem.targetPath) &&
        Objects.equals(this.duplicatedStatus, duplicatedItem.duplicatedStatus) &&
        Objects.equals(this.signedUrl, duplicatedItem.signedUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sourceContentId, duplicatedContentId, targetPath, duplicatedStatus, signedUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DuplicatedItem {\n");
    sb.append("    sourceContentId: ").append(toIndentedString(sourceContentId)).append("\n");
    sb.append("    duplicatedContentId: ").append(toIndentedString(duplicatedContentId)).append("\n");
    sb.append("    targetPath: ").append(toIndentedString(targetPath)).append("\n");
    sb.append("    duplicatedStatus: ").append(toIndentedString(duplicatedStatus)).append("\n");
    sb.append("    signedUrl: ").append(toIndentedString(signedUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

