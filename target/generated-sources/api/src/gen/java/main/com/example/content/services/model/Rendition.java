/*
 * Content Services client
 * Manage content items through multiple repositories.
 *
 * The version of the OpenAPI document: 3.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.content.services.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;


/**
 * Rendition definition.
 */
@ApiModel(description = "Rendition definition.")
@JsonPropertyOrder({
  Rendition.JSON_PROPERTY_STREAM_ID,
  Rendition.JSON_PROPERTY_MIME_TYPE,
  Rendition.JSON_PROPERTY_LENGTH,
  Rendition.JSON_PROPERTY_TITLE,
  Rendition.JSON_PROPERTY_KIND,
  Rendition.JSON_PROPERTY_HEIGHT,
  Rendition.JSON_PROPERTY_WIDTH,
  Rendition.JSON_PROPERTY_RENDITION_DOCUMENT_ID,
  Rendition.JSON_PROPERTY_ORIGINAL_DOCUMENT_ID,
  Rendition.JSON_PROPERTY_LINKS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Rendition {
  public static final String JSON_PROPERTY_STREAM_ID = "streamId";
  private String streamId;

  public static final String JSON_PROPERTY_MIME_TYPE = "mimeType";
  private String mimeType;

  public static final String JSON_PROPERTY_LENGTH = "length";
  private Integer length;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_KIND = "kind";
  private String kind;

  public static final String JSON_PROPERTY_HEIGHT = "height";
  private Integer height;

  public static final String JSON_PROPERTY_WIDTH = "width";
  private Integer width;

  public static final String JSON_PROPERTY_RENDITION_DOCUMENT_ID = "renditionDocumentId";
  private String renditionDocumentId;

  public static final String JSON_PROPERTY_ORIGINAL_DOCUMENT_ID = "originalDocumentId";
  private String originalDocumentId;

  public static final String JSON_PROPERTY_LINKS = "links";
  private Map<String, Map<String, Object>> links = null;

  public Rendition() { 
  }

  public Rendition streamId(String streamId) {
    this.streamId = streamId;
    return this;
  }

   /**
   * The rendition&#39;s stream id.
   * @return streamId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The rendition's stream id.")
  @JsonProperty(JSON_PROPERTY_STREAM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStreamId() {
    return streamId;
  }


  @JsonProperty(JSON_PROPERTY_STREAM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStreamId(String streamId) {
    this.streamId = streamId;
  }


  public Rendition mimeType(String mimeType) {
    this.mimeType = mimeType;
    return this;
  }

   /**
   * The rendition&#39;s mimeType.
   * @return mimeType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The rendition's mimeType.")
  @JsonProperty(JSON_PROPERTY_MIME_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMimeType() {
    return mimeType;
  }


  @JsonProperty(JSON_PROPERTY_MIME_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMimeType(String mimeType) {
    this.mimeType = mimeType;
  }


  public Rendition length(Integer length) {
    this.length = length;
    return this;
  }

   /**
   * The Renditions length.
   * @return length
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Renditions length.")
  @JsonProperty(JSON_PROPERTY_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLength() {
    return length;
  }


  @JsonProperty(JSON_PROPERTY_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLength(Integer length) {
    this.length = length;
  }


  public Rendition title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Rendition&#39;s title.
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Rendition's title.")
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTitle(String title) {
    this.title = title;
  }


  public Rendition kind(String kind) {
    this.kind = kind;
    return this;
  }

   /**
   * The cmis kind of the rendition.
   * @return kind
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The cmis kind of the rendition.")
  @JsonProperty(JSON_PROPERTY_KIND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getKind() {
    return kind;
  }


  @JsonProperty(JSON_PROPERTY_KIND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKind(String kind) {
    this.kind = kind;
  }


  public Rendition height(Integer height) {
    this.height = height;
    return this;
  }

   /**
   * Height of the Rendition (Applicable only for images).
   * @return height
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Height of the Rendition (Applicable only for images).")
  @JsonProperty(JSON_PROPERTY_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getHeight() {
    return height;
  }


  @JsonProperty(JSON_PROPERTY_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHeight(Integer height) {
    this.height = height;
  }


  public Rendition width(Integer width) {
    this.width = width;
    return this;
  }

   /**
   * Width of the Rendition (Applicable only for images).
   * @return width
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Width of the Rendition (Applicable only for images).")
  @JsonProperty(JSON_PROPERTY_WIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getWidth() {
    return width;
  }


  @JsonProperty(JSON_PROPERTY_WIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWidth(Integer width) {
    this.width = width;
  }


  public Rendition renditionDocumentId(String renditionDocumentId) {
    this.renditionDocumentId = renditionDocumentId;
    return this;
  }

   /**
   * The rendition Document id.
   * @return renditionDocumentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The rendition Document id.")
  @JsonProperty(JSON_PROPERTY_RENDITION_DOCUMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRenditionDocumentId() {
    return renditionDocumentId;
  }


  @JsonProperty(JSON_PROPERTY_RENDITION_DOCUMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRenditionDocumentId(String renditionDocumentId) {
    this.renditionDocumentId = renditionDocumentId;
  }


  public Rendition originalDocumentId(String originalDocumentId) {
    this.originalDocumentId = originalDocumentId;
    return this;
  }

   /**
   * The rendition original Document id.
   * @return originalDocumentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The rendition original Document id.")
  @JsonProperty(JSON_PROPERTY_ORIGINAL_DOCUMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOriginalDocumentId() {
    return originalDocumentId;
  }


  @JsonProperty(JSON_PROPERTY_ORIGINAL_DOCUMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOriginalDocumentId(String originalDocumentId) {
    this.originalDocumentId = originalDocumentId;
  }


  public Rendition links(Map<String, Map<String, Object>> links) {
    this.links = links;
    return this;
  }

  public Rendition putLinksItem(String key, Map<String, Object> linksItem) {
    if (this.links == null) {
      this.links = new HashMap<>();
    }
    this.links.put(key, linksItem);
    return this;
  }

   /**
   * All the links to this Rendition.
   * @return links
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "All the links to this Rendition.")
  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Map<String, Object>> getLinks() {
    return links;
  }


  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLinks(Map<String, Map<String, Object>> links) {
    this.links = links;
  }


  /**
   * Return true if this rendition object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Rendition rendition = (Rendition) o;
    return Objects.equals(this.streamId, rendition.streamId) &&
        Objects.equals(this.mimeType, rendition.mimeType) &&
        Objects.equals(this.length, rendition.length) &&
        Objects.equals(this.title, rendition.title) &&
        Objects.equals(this.kind, rendition.kind) &&
        Objects.equals(this.height, rendition.height) &&
        Objects.equals(this.width, rendition.width) &&
        Objects.equals(this.renditionDocumentId, rendition.renditionDocumentId) &&
        Objects.equals(this.originalDocumentId, rendition.originalDocumentId) &&
        Objects.equals(this.links, rendition.links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(streamId, mimeType, length, title, kind, height, width, renditionDocumentId, originalDocumentId, links);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Rendition {\n");
    sb.append("    streamId: ").append(toIndentedString(streamId)).append("\n");
    sb.append("    mimeType: ").append(toIndentedString(mimeType)).append("\n");
    sb.append("    length: ").append(toIndentedString(length)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    renditionDocumentId: ").append(toIndentedString(renditionDocumentId)).append("\n");
    sb.append("    originalDocumentId: ").append(toIndentedString(originalDocumentId)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

