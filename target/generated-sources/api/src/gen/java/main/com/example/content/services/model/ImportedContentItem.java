/*
 * Content Services client
 * Manage content items through multiple repositories.
 *
 * The version of the OpenAPI document: 3.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.content.services.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.example.content.services.model.ContentItemProperty;
import com.example.content.services.model.ContentRelationships;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;


/**
 * ImportedContentItem
 */
@JsonPropertyOrder({
  ImportedContentItem.JSON_PROPERTY_CONTENTPATH,
  ImportedContentItem.JSON_PROPERTY_BUNDLEPATH,
  ImportedContentItem.JSON_PROPERTY_CONTENT_RELATIONSHIPS,
  ImportedContentItem.JSON_PROPERTY_ITEMPROPERTIES
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ImportedContentItem {
  public static final String JSON_PROPERTY_CONTENTPATH = "contentpath";
  private String contentpath;

  public static final String JSON_PROPERTY_BUNDLEPATH = "bundlepath";
  private String bundlepath;

  public static final String JSON_PROPERTY_CONTENT_RELATIONSHIPS = "contentRelationships";
  private ContentRelationships contentRelationships;

  public static final String JSON_PROPERTY_ITEMPROPERTIES = "itemproperties";
  private List<ContentItemProperty> itemproperties = null;

  public ImportedContentItem() { 
  }

  public ImportedContentItem contentpath(String contentpath) {
    this.contentpath = contentpath;
    return this;
  }

   /**
   * Content path that item supposed to be imported to
   * @return contentpath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Content path that item supposed to be imported to")
  @JsonProperty(JSON_PROPERTY_CONTENTPATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContentpath() {
    return contentpath;
  }


  @JsonProperty(JSON_PROPERTY_CONTENTPATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContentpath(String contentpath) {
    this.contentpath = contentpath;
  }


  public ImportedContentItem bundlepath(String bundlepath) {
    this.bundlepath = bundlepath;
    return this;
  }

   /**
   * Path in import bundle.
   * @return bundlepath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Path in import bundle.")
  @JsonProperty(JSON_PROPERTY_BUNDLEPATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBundlepath() {
    return bundlepath;
  }


  @JsonProperty(JSON_PROPERTY_BUNDLEPATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBundlepath(String bundlepath) {
    this.bundlepath = bundlepath;
  }


  public ImportedContentItem contentRelationships(ContentRelationships contentRelationships) {
    this.contentRelationships = contentRelationships;
    return this;
  }

   /**
   * Get contentRelationships
   * @return contentRelationships
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONTENT_RELATIONSHIPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ContentRelationships getContentRelationships() {
    return contentRelationships;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT_RELATIONSHIPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContentRelationships(ContentRelationships contentRelationships) {
    this.contentRelationships = contentRelationships;
  }


  public ImportedContentItem itemproperties(List<ContentItemProperty> itemproperties) {
    this.itemproperties = itemproperties;
    return this;
  }

  public ImportedContentItem addItempropertiesItem(ContentItemProperty itempropertiesItem) {
    if (this.itemproperties == null) {
      this.itemproperties = new ArrayList<>();
    }
    this.itemproperties.add(itempropertiesItem);
    return this;
  }

   /**
   * Content item properties.
   * @return itemproperties
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "Content item properties.")
  @JsonProperty(JSON_PROPERTY_ITEMPROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ContentItemProperty> getItemproperties() {
    return itemproperties;
  }


  @JsonProperty(JSON_PROPERTY_ITEMPROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setItemproperties(List<ContentItemProperty> itemproperties) {
    this.itemproperties = itemproperties;
  }


  /**
   * Return true if this imported-content-item object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ImportedContentItem importedContentItem = (ImportedContentItem) o;
    return Objects.equals(this.contentpath, importedContentItem.contentpath) &&
        Objects.equals(this.bundlepath, importedContentItem.bundlepath) &&
        Objects.equals(this.contentRelationships, importedContentItem.contentRelationships) &&
        Objects.equals(this.itemproperties, importedContentItem.itemproperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contentpath, bundlepath, contentRelationships, itemproperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ImportedContentItem {\n");
    sb.append("    contentpath: ").append(toIndentedString(contentpath)).append("\n");
    sb.append("    bundlepath: ").append(toIndentedString(bundlepath)).append("\n");
    sb.append("    contentRelationships: ").append(toIndentedString(contentRelationships)).append("\n");
    sb.append("    itemproperties: ").append(toIndentedString(itemproperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

