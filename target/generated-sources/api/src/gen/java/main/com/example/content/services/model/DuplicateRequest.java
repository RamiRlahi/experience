/*
 * Content Services client
 * Manage content items through multiple repositories.
 *
 * The version of the OpenAPI document: 3.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.content.services.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.example.content.services.model.ItemToDuplicate;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.LinkedHashSet;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;


/**
 * Payload schema to duplicate documents in a specific repository.
 */
@ApiModel(description = "Payload schema to duplicate documents in a specific repository.")
@JsonPropertyOrder({
  DuplicateRequest.JSON_PROPERTY_REPOSITORY_ID,
  DuplicateRequest.JSON_PROPERTY_ROOT_FOLDER,
  DuplicateRequest.JSON_PROPERTY_CONTENTS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DuplicateRequest {
  public static final String JSON_PROPERTY_REPOSITORY_ID = "repositoryId";
  private String repositoryId;

  public static final String JSON_PROPERTY_ROOT_FOLDER = "rootFolder";
  private String rootFolder;

  public static final String JSON_PROPERTY_CONTENTS = "contents";
  private Set<ItemToDuplicate> contents = new LinkedHashSet<>();

  public DuplicateRequest() { 
  }

  public DuplicateRequest repositoryId(String repositoryId) {
    this.repositoryId = repositoryId;
    return this;
  }

   /**
   * Repository ID to duplicate documents in.
   * @return repositoryId
  **/
  @javax.annotation.Nonnull
  @NotNull
  @ApiModelProperty(required = true, value = "Repository ID to duplicate documents in.")
  @JsonProperty(JSON_PROPERTY_REPOSITORY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRepositoryId() {
    return repositoryId;
  }


  @JsonProperty(JSON_PROPERTY_REPOSITORY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRepositoryId(String repositoryId) {
    this.repositoryId = repositoryId;
  }


  public DuplicateRequest rootFolder(String rootFolder) {
    this.rootFolder = rootFolder;
    return this;
  }

   /**
   * Root folder in which original documents should be searched for. Default is /
   * @return rootFolder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Root folder in which original documents should be searched for. Default is /")
  @JsonProperty(JSON_PROPERTY_ROOT_FOLDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRootFolder() {
    return rootFolder;
  }


  @JsonProperty(JSON_PROPERTY_ROOT_FOLDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRootFolder(String rootFolder) {
    this.rootFolder = rootFolder;
  }


  public DuplicateRequest contents(Set<ItemToDuplicate> contents) {
    this.contents = contents;
    return this;
  }

  public DuplicateRequest addContentsItem(ItemToDuplicate contentsItem) {
    this.contents.add(contentsItem);
    return this;
  }

   /**
   * All documents to duplicate in this request.
   * @return contents
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "All documents to duplicate in this request.")
  @JsonProperty(JSON_PROPERTY_CONTENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Set<ItemToDuplicate> getContents() {
    return contents;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_CONTENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setContents(Set<ItemToDuplicate> contents) {
    this.contents = contents;
  }


  /**
   * Return true if this duplicate-request object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DuplicateRequest duplicateRequest = (DuplicateRequest) o;
    return Objects.equals(this.repositoryId, duplicateRequest.repositoryId) &&
        Objects.equals(this.rootFolder, duplicateRequest.rootFolder) &&
        Objects.equals(this.contents, duplicateRequest.contents);
  }

  @Override
  public int hashCode() {
    return Objects.hash(repositoryId, rootFolder, contents);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DuplicateRequest {\n");
    sb.append("    repositoryId: ").append(toIndentedString(repositoryId)).append("\n");
    sb.append("    rootFolder: ").append(toIndentedString(rootFolder)).append("\n");
    sb.append("    contents: ").append(toIndentedString(contents)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

