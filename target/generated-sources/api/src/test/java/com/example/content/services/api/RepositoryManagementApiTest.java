/*
 * Content Services client
 * Manage content items through multiple repositories.
 *
 * The version of the OpenAPI document: 3.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.content.services.api;

import com.example.content.services.invoker.ApiException;
import com.example.content.services.model.Repository;
import com.example.content.services.model.StatusMessage;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for RepositoryManagementApi
 */
@Ignore
public class RepositoryManagementApiTest {

    private final RepositoryManagementApi api = new RepositoryManagementApi();

    
    /**
     * 
     *
     * Copies the content of the source repository to the destination repository.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void copyRepositoryTest() throws ApiException {
        String srcRepositoryId = null;
        String dstRepositoryId = null;
        
        api.copyRepository(srcRepositoryId, dstRepositoryId);
        
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Creates repositories.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createRepositoriesTest() throws ApiException {
        List<Repository> repository = null;
        
        api.createRepositories(repository);
        
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Deletes a repository. If an external storage is configured for the repository, then behavior differs based on exact implementation of external storage connector. By default (in Backbase C3 implementations), contents remain in the external storage and just the database reference will be removed.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteRepositoryTest() throws ApiException {
        String repositoryId = null;
        
        api.deleteRepository(repositoryId);
        
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Returns a repository definition.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRepositoryTest() throws ApiException {
        String repositoryId = null;
        Repository response = 
        api.getRepository(repositoryId);
        
        // TODO: test validations
    }
    
}
