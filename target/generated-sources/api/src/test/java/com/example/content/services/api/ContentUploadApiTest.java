/*
 * Content Services client
 * Manage content items through multiple repositories.
 *
 * The version of the OpenAPI document: 3.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.content.services.api;

import com.example.content.services.invoker.ApiException;
import com.example.content.services.model.Document;
import java.io.File;
import com.example.content.services.model.StatusMessage;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for ContentUploadApi
 */
@Ignore
public class ContentUploadApiTest {

    private final ContentUploadApi api = new ContentUploadApi();

    
    /**
     * 
     *
     * Performs uploading of content
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void handleContentUploadTest() throws ApiException {
        String repositoryId = null;
        String targetPath = null;
        File _file = null;
        String name = null;
        String cmisColonObjectTypeId = null;
        String cmisColonCreatedBy = null;
        String cmisColonLastModifiedBy = null;
        String bbColonTitle = null;
        String bbColonLocale = null;
        String changeToken = null;
        Boolean createSignedUrl = null;
        Document response = 
        api.handleContentUpload(repositoryId, targetPath, _file, name, cmisColonObjectTypeId, cmisColonCreatedBy, cmisColonLastModifiedBy, bbColonTitle, bbColonLocale, changeToken, createSignedUrl);
        
        // TODO: test validations
    }
    
}
