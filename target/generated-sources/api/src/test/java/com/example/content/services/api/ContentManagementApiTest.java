/*
 * Content Services client
 * Manage content items through multiple repositories.
 *
 * The version of the OpenAPI document: 3.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.content.services.api;

import com.example.content.services.invoker.ApiException;
import com.example.content.services.model.Document;
import com.example.content.services.model.DocumentToMove;
import com.example.content.services.model.DocumentToSave;
import com.example.content.services.model.ItemToRevert;
import com.example.content.services.model.QueryRequest;
import com.example.content.services.model.RemoveRequest;
import java.util.Set;
import com.example.content.services.model.StatusMessage;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for ContentManagementApi
 */
@Ignore
public class ContentManagementApiTest {

    private final ContentManagementApi api = new ContentManagementApi();

    
    /**
     * 
     *
     * Performs moving of documents.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void moveContentTest() throws ApiException {
        List<DocumentToMove> documentToMove = null;
        Set<Document> response = 
        api.moveContent(documentToMove);
        
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Performs a content query.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void queryContentTest() throws ApiException {
        QueryRequest queryRequest = null;
        Set<Document> response = 
        api.queryContent(queryRequest);
        
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Performs deletion of documents by their ids.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeContentTest() throws ApiException {
        RemoveRequest removeRequest = null;
        
        api.removeContent(removeRequest);
        
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Performs documents reverting to specific versions.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void revertContentTest() throws ApiException {
        List<ItemToRevert> itemToRevert = null;
        Set<Document> response = 
        api.revertContent(itemToRevert);
        
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Performs creation or update of documents.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void saveContentTest() throws ApiException {
        Boolean updateProperties = null;
        List<DocumentToSave> documentToSave = null;
        Set<Document> response = 
        api.saveContent(updateProperties, documentToSave);
        
        // TODO: test validations
    }
    
}
